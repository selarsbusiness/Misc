// This "Tool" if you can call it that is to be pasted into the console to hide adds when browsing as they tends to muddy results needed when researching
// Usage: Copy paste this file's contents into the web console after hitting f12 and press enter
// Note: It may make the browser a bit slower, to get rid of the process you can always just close the tab and go about your day. This is purely for educational purposes and is not intended to do anything more than prove a general concept to myself and will likely not be maintained.

// 1. Define the task you want to repeat on the DOM
// This function will be executed on the main thread
function myDOMModificationTask(content) {
    document.querySelectorAll('shreddit-ad-post').forEach(function(item) {
      item.hidden = true
    });
    document.querySelectorAll('shreddit-dynamic-ad-link').forEach(function(item) {
      item.hidden = true
    });
}

// 2. Create the Web Worker script as a Blob
const workerScriptContent = `
    self.onmessage = function(event) {
        const { interval, messageContent } = event.data;

        // Function to send a message back to the main thread
        const sendDomUpdate = () => {
            self.postMessage({ type: 'domUpdate', content: messageContent });
        };

        // Immediately send the first update
        sendDomUpdate();

        // Set up the interval to send messages
        setInterval(sendDomUpdate, interval);
    };
`;

const blob = new Blob([workerScriptContent], { type: 'application/javascript' });
const workerURL = URL.createObjectURL(blob);

// 3. Create the Web Worker instance
const myWorker = new Worker(workerURL);

// 4. Listen for messages from the Web Worker
myWorker.onmessage = function(event) {
    if (event.data.type === 'domUpdate') {
        myDOMModificationTask(event.data.content);
    }
};

// 5. Start the worker by sending it initial data
// The worker will send a message every 3 seconds (3000ms)
myWorker.postMessage({
    interval: 3000, // Repeat every 3 seconds
    messageContent: 'Hello from the Web Worker!'
});

console.log('Web Worker initiated. Check the bottom right for updates or console for messages.');

// Optional: Function to terminate the worker
window.terminateMyWorker = function() {
    if (myWorker) {
        myWorker.terminate();
        URL.revokeObjectURL(workerURL); // Clean up the Blob URL
        console.log('Web Worker terminated and URL revoked.');
        const div = document.getElementById('workerOutput');
        if (div) {
            div.remove();
        }
    }
};